name: Check checklist in PR

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Check PR checklist
        id: checklist
        run: |
          CHECKLIST=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} | \
            jq -r '.body' | grep -o '\[.\] .*' | tr -d '[]')
          UNCHECKED_ITEMS=$(echo "$CHECKLIST" | grep -v 'x')
          if [ -n "$UNCHECKED_ITEMS" ]; then
            echo "Not all items in the checklist have been checked‚ùå."
            echo "$UNCHECKED_ITEMS"
            exit 1
          else
            echo "All items in the checklist have been checked‚úÖ"
          fi

      - name: Comment on PR if checklist is fully checked
        if: failure()
        run: |
          COMMENT_BODY="All items in the checklist have been checkedüéâ"
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments

      - name: Get PR assignee for commenting on PR if checklist is not fully checked
        id: assign
        uses: actions/github-script@v6
        with:
          script: |
            const assignee = context.payload.pull_request.user.login;
            github.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [assignee]
            });
            return assignee;

      - name: Comment on PR if checklist is not fully checked
        if: failure()
        run: |
          COMMENT_BODY="@${{ steps.assign.outputs.result }} Not all items in the checklist have been checkedüëÄ\n\nPlease review the unchecked items in the PR description."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -X POST \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
